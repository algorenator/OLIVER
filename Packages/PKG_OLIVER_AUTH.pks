--
-- PKG_OLIVER_AUTH  (Package) 
--
CREATE OR REPLACE PACKAGE OLIVER.PKG_OLIVER_AUTH AS
    FUNCTION MD5HASH (
        P_INPUT IN VARCHAR2
    ) RETURN VARCHAR2;

    FUNCTION AUTHENTICATE (
        P_USERNAME   IN VARCHAR2,
        P_PASSWORD   IN VARCHAR2
    ) RETURN BOOLEAN;

    FUNCTION CREATE_HASH_PASSWORD (
        P_USERNAME   IN USERS.USER_NAME%TYPE,
        P_PASSWORD   IN USERS.PASSWORD%TYPE
    ) RETURN VARCHAR2;

    PROCEDURE SEND_VERIFICATION_EMAIL (
        P_EMAIL   IN VARCHAR2,
        P_CODE    IN RAW
    );

    TYPE T_TREE_NODE IS RECORD ( NAME VARCHAR2(255),
    CODE VARCHAR2(255),
    PARENT_CODE VARCHAR2(255),
    VALUE VARCHAR2(255),
    PLAN_ID VARCHAR2(255),
    GROUP_ID VARCHAR2(255) );
    TYPE T_ACCESSES_TREE IS
        TABLE OF T_TREE_NODE;
    FUNCTION USER_NOT_GRANTED_ACCESSES (
        P_CLIENT_ID   VARCHAR2,
        P_PLAN_ID     VARCHAR2,
        P_USER_ID     VARCHAR2
    ) RETURN T_ACCESSES_TREE
        PIPELINED;

    FUNCTION USER_GRANTED_ACCESSES (
        P_CLIENT_ID   VARCHAR2,
        P_PLAN_ID     VARCHAR2,
        P_USER_ID     VARCHAR2
    ) RETURN T_ACCESSES_TREE
        PIPELINED;

    PROCEDURE GRANT_USER_ACCESS (
        P_CLIENT_ID   VARCHAR2,
        P_USER_ID     VARCHAR2,
        P_PLAN_ID     VARCHAR2,
        P_GROUP_ID    VARCHAR2
    );

    PROCEDURE REVOKE_USER_ACCESS (
        P_CLIENT_ID   VARCHAR2,
        P_USER_ID     VARCHAR2,
        P_PLAN_ID     VARCHAR2,
        P_GROUP_ID    VARCHAR2
    );

    FUNCTION GET_MODULE_DESC (
        P_MODULE_ID VARCHAR2
    ) RETURN VARCHAR2;

    TYPE T_GROUP_AUTH IS RECORD ( GROUP_ID VARCHAR2(255),
    GROUP_DESC VARCHAR2(255),
    PLAN_TYPE VARCHAR2(255),
    MODULE_DESC VARCHAR2(255),
    PERMISSION_LEVEL VARCHAR2(255),
    GROUP_ROWID VARCHAR2(255) );
    TYPE T_GROUPS_AUTH IS
        TABLE OF T_GROUP_AUTH;
    FUNCTION GET_GROUP_DETAILS (
        P_CLIENT_ID   VARCHAR2,
        P_PLAN_ID     VARCHAR2,
        P_GROUP_ID    VARCHAR2
    ) RETURN T_GROUPS_AUTH
        PIPELINED;

    FUNCTION AUTHORIZE (
        P_PLAN_ID     VARCHAR2,
        P_CLIENT_ID   VARCHAR2,
        P_USER_ID     NUMBER,
        P_APP_ID      NUMBER,
        P_PAGE_ID     NUMBER,
        P_COMP_TYPE   VARCHAR2,
        P_COMP_ID     NUMBER
    ) RETURN BOOLEAN;

    PROCEDURE AUDIT_ACCESS (
        P_CLIENT_ID     VARCHAR2,
        P_USER_NAME     VARCHAR2,
        P_AUTH_RESULT   VARCHAR2
    );

    PROCEDURE SEND_PASSWORD_UPDATED_EMAIL (
        P_EMAIL       IN VARCHAR2,
        P_CLIENT_ID   IN VARCHAR2
    );

    PROCEDURE SEND_CREATION_EMAIL (
        P_EMAIL       IN VARCHAR2,
        P_URL         IN VARCHAR2,
        P_CLIENT_ID   IN VARCHAR2
    );

    PROCEDURE CREATE_INITIAL_PASSWORD (
        P_EMAIL            IN VARCHAR2,
        P_CLIENT_ID        IN VARCHAR2,
        P_RESET_PASSWORD   IN VARCHAR2
    );

    PROCEDURE CHANGE_PASSWORD (
        P_CLIENT_ID    VARCHAR2,
        P_EMAIL        VARCHAR2,
        P_PASSWORD     VARCHAR2,
        P_SEND_EMAIL   BOOLEAN
    );

    PROCEDURE SEND_RESET_PASSWORD_EMAIL (
        P_EMAIL       IN VARCHAR2,
        P_URL         IN VARCHAR2,
        P_CLIENT_ID   IN VARCHAR2
    );

    FUNCTION IS_USER_ADMIN (
        P_CLIENT_ID VARCHAR2,
        P_EMAIL VARCHAR2
    ) RETURN VARCHAR2;

    PROCEDURE UNAVAILABLE_MESSAGE;

    procedure audit_logout;

    function user_has_access(p_client_id varchar2, p_plan_id varchar2, p_email varchar2, p_module varchar2) return varchar2;

END PKG_OLIVER_AUTH;

/

