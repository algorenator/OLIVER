--
-- CONVERT_API  (Package Body) 
--
CREATE OR REPLACE PACKAGE BODY OLIVER.CONVERT_API IS

    FUNCTION ENCRYPTS (
        P_INPUT VARCHAR2
    ) RETURN RAW AS

        V_KEY          VARCHAR2(2000) := '2017052620170526';
        V_MASTER_KEY   VARCHAR2(2000) := 'cdat';
        V_MOD          NUMBER := DBMS_CRYPTO.ENCRYPT_AES128 + DBMS_CRYPTO.CHAIN_CBC + DBMS_CRYPTO.PAD_PKCS5;
        V_ENC          RAW(2000);
        V_ENC_KEY      RAW(2000);
    BEGIN
        V_ENC_KEY := UTL_RAW.BIT_XOR(UTL_I18N.STRING_TO_RAW(V_KEY,'AL32UTF8'),UTL_I18N.STRING_TO_RAW(V_MASTER_KEY,'AL32UTF8') );

        V_ENC := DBMS_CRYPTO.ENCRYPT(UTL_I18N.STRING_TO_RAW(P_INPUT,'AL32UTF8'),V_MOD,V_ENC_KEY);

        RETURN V_ENC;
    EXCEPTION
        WHEN OTHERS THEN
            RETURN NULL;
    END ENCRYPTS;

    FUNCTION DECRYPTS (
        P_ENCRIPT_INPUT RAW
    ) RETURN VARCHAR2 AS

        V_KEY          VARCHAR2(2000) := '2017052620170526';
        V_MASTER_KEY   VARCHAR2(2000) := 'cdat';
        V_IN_VAL       RAW(2000) := HEXTORAW(P_ENCRIPT_INPUT);
        V_MOD          NUMBER := DBMS_CRYPTO.ENCRYPT_AES128 + DBMS_CRYPTO.CHAIN_CBC + DBMS_CRYPTO.PAD_PKCS5;
        V_DEC          RAW(2000);
        V_ENC_KEY      RAW(2000);
    BEGIN
        V_ENC_KEY := UTL_RAW.BIT_XOR(UTL_I18N.STRING_TO_RAW(V_KEY,'AL32UTF8'),UTL_I18N.STRING_TO_RAW(V_MASTER_KEY,'AL32UTF8') );

        V_DEC := DBMS_CRYPTO.DECRYPT(V_IN_VAL,V_MOD,V_ENC_KEY);
        RETURN UTL_I18N.RAW_TO_CHAR(V_DEC);
    EXCEPTION
        WHEN OTHERS THEN
            RETURN NULL;
    END DECRYPTS;

END CONVERT_API;
/

