--
-- PENSION_PKG  (Package Body) 
--
CREATE OR REPLACE PACKAGE BODY OLIVER.PENSION_PKG AS
FUNCTION GET_OAS(DT DATE) RETURN NUMBER AS
R NUMBER(12,2):=0;
O1 NUMBER(12,2):=0;
O2 NUMBER(12,2):=0;
O3 NUMBER(12,2):=0;
O4 NUMBER(12,2):=0;
BEGIN
    SELECT OAS1,OAS2,OAS3,OAS4 INTO O1,O2,O3,O4 FROM TBL_CRA_LIMITS  WHERE LIMITYEAR=TO_NUMBER(TO_CHAR(DT,'RRRR'));
    IF TO_NUMBER(TO_CHAR(DT,'MM'))<4 THEN
       RETURN O1;
    ELSIF TO_NUMBER(TO_CHAR(DT,'MM'))<7 THEN
       RETURN O2;
    ELSIF TO_NUMBER(TO_CHAR(DT,'MM'))<10 THEN
       RETURN O3;
    ELSE
       RETURN O4;
    END IF;
    EXCEPTION WHEN OTHERS THEN RETURN 0;
END;



FUNCTION GET_CPP(DT DATE) RETURN NUMBER  IS
R NUMBER(12,2):=0;
BEGIN
BEGIN
   SELECT CPP INTO R FROM TBL_CRA_LIMITS  WHERE LIMITYEAR=TO_NUMBER(TO_CHAR(DT,'RRRR'));
   EXCEPTION WHEN  OTHERS THEN R:=0;
  END;
   RETURN R;
END ;
  FUNCTION GET_PEN_EMPLOYER(CLT_ID VARCHAR2,PL_ID VARCHAR2,EE_ID VARCHAR2,MTH DATE) RETURN VARCHAR2 AS
  R VARCHAR2(100);
BEGIN
SELECT MAX(PENM_EMPLOYER) INTO R FROM TBL_PENMAST WHERE PENM_CLIENT=CLT_ID AND PENM_PLAN=PL_ID AND PENM_ID=EE_ID ORDER BY PENM_CLIENT,PENM_PLAN,PENM_ID;
IF R IS NULL THEN

 
SELECT MAX(A.TD_EMPLOYER) INTO R FROM TRANSACTION_DETAIL A WHERE A.TD_CLIENT_ID=CLT_ID AND A.TD_MEM_ID=EE_ID AND A.TD_PLAN_ID=PL_ID AND NVL(a.TDT_PEN_UNITS,0)+nvl(a.tdt_ee_units,0)+nvl(a.tdt_er_units,0)+nvl(a.td_vol_units,0)<>0 AND  nvl(a.td_employer,'XXX') not in ('ADJ','XXX',
'CLE',
'CLS',
'CRS',
'HEC',
'HMC',
'HVC',
'PSV',
'REI',
'REO',
'TFS',
'TIA',
'TRI',
'TTS',
'WDR',
'ASU',
'CRH',
'INS',
'INS96',
'SRP',
'SUD',
'ZHR') and TRUNC(A.TD_PERIOD,'MM') =(SELECT MAX(TRUNC(B.TD_PERIOD,'MM')) FROM TRANSACTION_DETAIL B WHERE B.TD_MEM_ID=EE_ID AND B.TD_PLAN_ID=PL_ID AND  NVL(b.TDT_PEN_UNITS,0)+nvl(b.tdt_ee_units,0)+nvl(b.tdt_er_units,0)+nvl(b.td_vol_units,0)<>0 and TRUNC(B.TD_PERIOD,'MM')<=MTH AND  nvl(B.td_employer,'XXX') not in ('ADJ','XXX',
'CLE',
'CLS',
'CRS',
'HEC',
'HMC',
'HVC',
'PSV',
'REI',
'REO',
'TFS',
'TIA',
'TRI',
'TTS',
'WDR',
'ASU',
'CRH',
'INS',
'INS96',
'SRP',
'SUD',
'ZHR')  ) ORDER BY TD_CLIENT_ID,TD_PLAN_ID,TD_MEM_ID;
   IF R IS NULL THEN
     -- SELECT MAX(A.TD_EMPLOYER) INTO R FROM TRANSACTION_DETAIL A WHERE A.TD_CLIENT_ID=CLT_ID AND A.TD_MEM_ID=EE_ID AND A.TD_PLAN_ID=PL_ID AND NVL(A.TDT_PEN_UNITS,0)>0 AND TRUNC(A.TD_PERIOD,'MM')=(SELECT MAX(TRUNC(B.TD_PERIOD,'MM')) FROM TRANSACTION_DETAIL B WHERE B.TD_MEM_ID=EE_ID AND B.TD_PLAN_ID=PL_ID AND TRUNC(B.TD_PERIOD,'MM')<=MTH AND NVL(TDT_PEN_UNITS,0)>0) ORDER BY TD_CLIENT_ID,TD_PLAN_ID,TD_MEM_ID;
   SELECT MAX(A.TEH_ER_ID) INTO R FROM TBL_EMPLOYMENT_HIST A WHERE A.TEH_CLIENT=CLT_ID AND A.TEH_ID=EE_ID AND A.TEH_PLAN=PL_ID AND A.TEH_EFF_DATE=(SELECT MAX(B.TEH_EFF_DATE) FROM TBL_EMPLOYMENT_HIST B WHERE B.TEH_ID=EE_ID AND B.TEH_PLAN=PL_ID AND TEH_EFF_DATE<=MTH) ORDER BY A.TEH_CLIENT,A.TEH_PLAN,A.TEH_ID;
    END IF;
 END IF;   
    RETURN R;
  END GET_PEN_EMPLOYER;
FUNCTION GET_PEN_LRD(CLT_ID VARCHAR2,PL_ID VARCHAR2,EE_ID VARCHAR2,MTH DATE) RETURN DATE AS
    R DATE;
BEGIN
SELECT MAX(TD_END_DATE) INTO R FROM TRANSACTION_DETAIL WHERE TD_CLIENT_ID=CLT_ID AND TD_PLAN_ID=PL_ID AND TD_MEM_ID=EE_ID AND TD_END_DATE<=MTH AND NVL(TDT_PEN_UNITS,0)>0 ORDER BY TD_CLIENT_ID,TD_PLAN_ID,TD_MEM_ID;

   RETURN R;
END GET_PEN_LRD;
FUNCTION GET_PEN_ER_LRD(CLT_ID VARCHAR2,PL_ID VARCHAR2,ER_ID VARCHAR2,MTH DATE) RETURN DATE AS
    R DATE;
BEGIN
SELECT MAX(THP_END_DATE) INTO R FROM TRANSACTION_HEADER_PEN WHERE THP_CLIENT_ID=CLT_ID AND THP_PLAN_ID=PL_ID AND THP_EMPLOYER=ER_ID AND THP_END_DATE<=MTH AND NVL(THP_UNITS,0)>0 ORDER BY THP_CLIENT_ID,THP_PLAN_ID,THP_EMPLOYER;

   RETURN R;
END GET_PEN_ER_LRD;
FUNCTION RETIREMENT_ELIGIBLE_TYPE(CLT_ID VARCHAR2,PL_ID VARCHAR2,EE_ID VARCHAR2,RET_DATE DATE,DOB DATE) RETURN VARCHAR2 IS
ERA NUMBER;
NRA NUMBER;
AGE NUMBER;
CNT NUMBER;
BEGIN
select count(*) INTO CNT from tbl_penmast where penm_client=clt_Id and penm_plan=pl_id and penm_id=ee_id and NVL(LTRIM(RTRIM(penm_status)),'X') in ('C','A','VP');
IF NVL(CNT,0)>0 THEN
 AGE:=MONTHS_BETWEEN(RET_DATE,DOB)/12;

   SELECT MAX(A.TPR_ERD_AGE),MAX(A.TPR_NRD_AGE) INTO ERA,NRA FROM TBL_PLAN_RULES A WHERE A.TPR_CLIENT_ID=CLT_ID AND A.TPR_PLAN_ID=PL_ID AND A.TPR_EFF_DATE=(SELECT MAX(B.TPR_EFF_DATE) FROM TBL_PLAN_RULES B WHERE B.TPR_CLIENT_ID=CLT_ID AND B.TPR_PLAN_ID=PL_ID);
   IF NVL(AGE,0)<>0 AND NVL(ERA,0)<>0 THEN
       IF AGE>=ERA THEN
        IF AGE<NRA THEN
         RETURN 'ER'; --early retirement
        ELSif age>nra then
         RETURN 'PR'; --Postponed Retirement
        else
          RETURN 'NR'; --Normal Retirement
        end if;
      ELSE
        RETURN 'NE';  --Not Eligible for Retirement
     END IF;
    ELSE
      RETURN 'NE'; --Not Eligible for Retirement
   END IF;
  ELSE
      RETURN 'NE'; --Not Eligible for Retirement
  END IF;
  END;
  FUNCTION GET_MARITAL_STATUS(CLT_ID VARCHAR2,PL_ID VARCHAR2,EE_ID VARCHAR2,DT DATE) RETURN VARCHAR2 IS
  CNT NUMBER;

BEGIN
      SELECT COUNT(*) INTO CNT FROM TBL_PEN_BENEFICIARY A WHERE A.PB_CLIENT=CLT_ID AND A.PB_PLAN=PL_ID AND PB_ID=EE_ID AND PB_RELATION IN ('SP','W','H') AND  (DT BETWEEN A.PB_EFF_DATE AND NVL(A.PB_TERM_DATE,DT)) ORDER BY A.PB_CLIENT,A.PB_PLAN,A.PB_ID;
      IF NVL(CNT,0)>0 THEN
       SELECT COUNT(*) INTO CNT FROM TBL_PEN_BENEFICIARY A WHERE A.PB_CLIENT=CLT_ID AND A.PB_PLAN=PL_ID AND PB_ID=EE_ID AND PB_RELATION NOT IN ('SP','W','H') AND  (DT BETWEEN A.PB_EFF_DATE AND NVL(A.PB_TERM_DATE,DT)) ORDER BY A.PB_CLIENT,A.PB_PLAN,A.PB_ID;
       IF NVL(CNT,0)>0 THEN
         RETURN 'FAMILY';
       ELSE
          RETURN 'COUPLE';
       END IF;
    ELSE
       RETURN 'SINGLE';
    END IF;

 END;
    FUNCTION GET_PEN_HIRE_DATE(CLT_ID VARCHAR2,PL_ID VARCHAR2,EE_ID VARCHAR2,MTH DATE) RETURN VARCHAR2 AS
  R VARCHAR2(100);
BEGIN
SELECT MAX(PENM_HIRE_DATE) INTO R FROM TBL_PENMAST WHERE PENM_CLIENT=CLT_ID AND PENM_PLAN=PL_ID AND PENM_ID=EE_ID ORDER BY PENM_CLIENT,PENM_PLAN,PENM_ID ;
IF R IS NULL THEN

 SELECT MAX(A.TEH_EFF_DATE) INTO R FROM TBL_EMPLOYMENT_HIST A WHERE A.TEH_CLIENT=CLT_ID AND A.TEH_ID=EE_ID AND A.TEH_PLAN=PL_ID AND A.TEH_EFF_DATE=(SELECT MAX(B.TEH_EFF_DATE) FROM TBL_EMPLOYMENT_HIST B WHERE B.TEH_ID=EE_ID AND B.TEH_PLAN=PL_ID AND TEH_EFF_DATE<=MTH) ORDER BY  A.TEH_CLIENT,A.TEH_PLAN,A.TEH_ID;

   IF R IS NULL THEN
      SELECT MIN(A.TD_START_DATE) INTO R FROM TRANSACTION_DETAIL A WHERE A.TD_CLIENT_ID=CLT_ID AND A.TD_MEM_ID=EE_ID AND A.TD_PLAN_ID=PL_ID AND NVL(A.TDT_PEN_UNITS,0)>0 AND TRUNC(A.TD_PERIOD,'MM')=(SELECT MAX(TRUNC(B.TD_PERIOD,'MM')) FROM TRANSACTION_DETAIL B WHERE B.TD_MEM_ID=EE_ID AND B.TD_PLAN_ID=PL_ID AND TRUNC(B.TD_PERIOD,'MM')<=MTH AND NVL(TDT_PEN_UNITS,0)>0) ORDER BY  A.TD_CLIENT_ID,A.TD_PLAN_ID,A.TD_MEM_ID;
    END IF;
 END IF;   
    RETURN R;
  END GET_PEN_HIRE_DATE; 
  FUNCTION GET_PEN_NRD(CLT_ID VARCHAR2,PL_ID VARCHAR2,EE_ID VARCHAR2,DOB DATE) RETURN DATE AS
  NRA NUMBER;
  BEGIN


   SELECT MAX(A.TPR_NRD_AGE) INTO NRA FROM TBL_PLAN_RULES A WHERE A.TPR_CLIENT_ID=CLT_ID AND A.TPR_PLAN_ID=PL_ID AND A.TPR_EFF_DATE=(SELECT MAX(B.TPR_EFF_DATE) FROM TBL_PLAN_RULES B WHERE B.TPR_CLIENT_ID=CLT_ID AND B.TPR_PLAN_ID=PL_ID);
   RETURN ADD_MONTHS(DOB,NRA*12);
  END GET_PEN_NRD;
  FUNCTION GET_PEN_ERD(CLT_ID VARCHAR2,PL_ID VARCHAR2,EE_ID VARCHAR2,DOB DATE) RETURN DATE AS
  ERA NUMBER;
  BEGIN


   SELECT MAX(A.TPR_ERD_AGE) INTO ERA FROM TBL_PLAN_RULES A WHERE A.TPR_CLIENT_ID=CLT_ID AND A.TPR_PLAN_ID=PL_ID AND A.TPR_EFF_DATE=(SELECT MAX(B.TPR_EFF_DATE) FROM TBL_PLAN_RULES B WHERE B.TPR_CLIENT_ID=CLT_ID AND B.TPR_PLAN_ID=PL_ID) ;
   RETURN ADD_MONTHS(DOB,ERA*12);
  END GET_PEN_ERD;
  FUNCTION GET_PEN_BENEFICIARY(CLT_ID VARCHAR2,PL_ID VARCHAR2,EE_ID VARCHAR2,MTH DATE) RETURN VARCHAR2 AS
  R VARCHAR2(3000);
  CURSOR C IS
    SELECT PB_FIRST_NAME||' '||PB_LAST_NAME BEN_NAME FROM TBL_PEN_BENEFICIARY WHERE PB_CLIENT=CLT_ID AND PB_PLAN=PL_ID AND PB_ID=EE_ID AND (PB_TERM_DATE IS NULL OR (PB_TERM_DATE IS NOT NULL AND PB_TERM_DATE<=NVL(MTH,SYSDATE))) ORDER BY PB_CLIENT,PB_PLAN,PB_ID;
  REC C%ROWTYPE;
  I NUMBER:=1;
  BEGIN
      OPEN C;
      LOOP
         FETCH C INTO REC;
         EXIT WHEN C%NOTFOUND;
         IF I=1 THEN
          R:=REC.BEN_NAME;
        ELSE
         R:=R||','||REC.BEN_NAME;
        END IF;
      END LOOP;
     CLOSE C;
     RETURN R;
END GET_PEN_BENEFICIARY;
FUNCTION GET_PEN_BENEFICIARY_REL(CLT_ID VARCHAR2,PL_ID VARCHAR2,EE_ID VARCHAR2,MTH DATE) RETURN VARCHAR2 AS
  R VARCHAR2(3000);
  CURSOR C IS
    SELECT PB_RELATION FROM TBL_PEN_BENEFICIARY WHERE PB_CLIENT=CLT_ID AND PB_PLAN=PL_ID AND PB_ID=EE_ID AND (PB_TERM_DATE IS NULL OR (PB_TERM_DATE IS NOT NULL AND PB_TERM_DATE<=NVL(MTH,SYSDATE))) ORDER BY PB_CLIENT,PB_PLAN,PB_ID;
  REC C%ROWTYPE;
  I NUMBER:=1;
  BEGIN
      OPEN C;
      LOOP
         FETCH C INTO REC;
         EXIT WHEN C%NOTFOUND;
         IF I=1 THEN
          R:=REC.PB_RELATION;
        ELSE
         R:=R||','||REC.PB_RELATION;
        END IF;
      END LOOP;
     CLOSE C;
     RETURN R;
END GET_PEN_BENEFICIARY_REL;
FUNCTION GET_PEN_CURR_UNITS(CLT_ID VARCHAR2,PL_ID VARCHAR2,EE_ID VARCHAR2,YR NUMBER) RETURN  NUMBER AS
R NUMBER(12,2):=0;
BEGIN
   SELECT SUM(MPU_UNITS) INTO R FROM TBL_MEM_UNITS WHERE MU_CLIENT=CLT_ID AND MPU_PLAN=PL_ID AND MPU_ID=EE_ID AND TO_NUMBER(TO_CHAR(MPU_PERIOD,'RRRR'))=YR ORDER BY MU_CLIENT,MPU_PLAN,MPU_ID;
   RETURN R;
END  GET_PEN_CURR_UNITS;
FUNCTION GET_PEN_CURR_RATE(CLT_ID VARCHAR2,PL_ID VARCHAR2,EE_ID VARCHAR2,MTH DATE) RETURN  NUMBER AS
R NUMBER(12,6):=0;
ER VARCHAR2(30);
BEGIN
ER:=GET_PEN_EMPLOYER(CLT_ID,PL_ID,EE_ID,MTH);
IF ER IS NOT NULL THEN
   SELECT NVL(MAX(A.TER_RATE),0) INTO R FROM TBL_ER_RATES A WHERE A.TER_CLIENT=CLT_ID AND A.TER_PLAN=PL_ID AND A.TER_ID=ER  AND A.TER_EFF_DATE=(SELECT MAX(B.TER_EFF_DATE) FROM TBL_ER_RATES B WHERE B.TER_CLIENT=CLT_ID AND B.TER_PLAN=PL_ID AND B.TER_ID=ER AND B.TER_EFF_DATE<=MTH) ORDER BY A.TER_CLIENT,A.TER_PLAN,A.TER_ID;
   RETURN R;
ELSE
   RETURN 0;
END IF;
END GET_PEN_CURR_RATE;
FUNCTION GET_PEN_UNITS_UPTO(CLT_ID VARCHAR2,PL_ID VARCHAR2,EE_ID VARCHAR2,MTH DATE) RETURN  NUMBER AS
 R NUMBER(12,2):=0;
BEGIN
   SELECT SUM(MPU_UNITS) INTO R FROM TBL_MEM_UNITS WHERE MU_CLIENT=CLT_ID AND MPU_PLAN=PL_ID AND MPU_ID=EE_ID AND MPU_PERIOD<=MTH;
   RETURN R;
END  GET_PEN_UNITS_UPTO;  
 FUNCTION GET_PEN_SPOUSE(CLT_ID VARCHAR2,PL_ID VARCHAR2,EE_ID VARCHAR2,MTH DATE) RETURN VARCHAR2 AS
  R VARCHAR2(3000);
  CURSOR C IS
    SELECT PB_FIRST_NAME||' '||PB_LAST_NAME BEN_NAME FROM TBL_PEN_BENEFICIARY WHERE PB_CLIENT=CLT_ID AND PB_PLAN=PL_ID AND PB_ID=EE_ID AND NVL(PB_RELATION,'X') IN ('W','H','SP') AND  (PB_TERM_DATE IS NULL OR (PB_TERM_DATE IS NOT NULL AND PB_TERM_DATE<=NVL(MTH,SYSDATE))) ORDER BY PB_CLIENT,PB_PLAN,PB_ID;
  REC C%ROWTYPE;
  I NUMBER:=1;
  BEGIN
      OPEN C;
      LOOP
         FETCH C INTO REC;
         EXIT WHEN C%NOTFOUND;
         IF I=1 THEN
          R:=REC.BEN_NAME;
        ELSE
         R:=R||','||REC.BEN_NAME;
        END IF;
      END LOOP;
     CLOSE C;
     RETURN R;
END GET_PEN_SPOUSE;
FUNCTION GET_PEN_YR_PENSION(CLT_ID VARCHAR2,PL_ID VARCHAR2,EE_ID VARCHAR2,YR NUMBER) RETURN  NUMBER AS
 R NUMBER(12,2) :=0;
 BEGIN
     SELECT NVL(SUM(ANN_PEN_VALUE),0) INTO R FROM TBL_ANNUAL WHERE ANN_CLIENT=CLT_ID AND ANN_PLAN=PL_ID AND ANN_ID=EE_ID AND ANN_YEAR=YR ORDER BY ANN_CLIENT,ANN_PLAN,ANN_ID;
     RETURN R;
END GET_PEN_YR_PENSION;
FUNCTION GET_PEN_UPTOPREVYR_PENSION(CLT_ID VARCHAR2,PL_ID VARCHAR2,EE_ID VARCHAR2,YR NUMBER) RETURN  NUMBER AS
 R NUMBER(12,2) :=0;
 BEGIN
     SELECT NVL(SUM(ANN_PEN_VALUE),0) INTO R FROM TBL_ANNUAL WHERE ANN_CLIENT=CLT_ID AND ANN_PLAN=PL_ID AND ANN_ID=EE_ID AND ANN_YEAR<YR  ORDER BY ANN_CLIENT,ANN_PLAN,ANN_ID;
     RETURN R;
END GET_PEN_UPTOPREVYR_PENSION;
 FUNCTION GET_PEN_SPOUSE_DOB(CLT_ID VARCHAR2,PL_ID VARCHAR2,EE_ID VARCHAR2,MTH DATE) RETURN DATE AS
  R DATE;
  CURSOR C IS
    SELECT PB_DOB FROM TBL_PEN_BENEFICIARY WHERE PB_CLIENT=CLT_ID AND PB_PLAN=PL_ID AND PB_ID=EE_ID AND NVL(PB_RELATION,'X') IN ('W','H','SP') AND  (PB_TERM_DATE IS NULL OR (PB_TERM_DATE IS NOT NULL AND PB_TERM_DATE<=NVL(MTH,SYSDATE)))  ORDER BY PB_CLIENT,PB_PLAN,PB_ID;
  REC C%ROWTYPE;
  I NUMBER:=1;
  BEGIN
      OPEN C;
      LOOP
         FETCH C INTO REC;
         EXIT WHEN C%NOTFOUND;
         IF I=1 THEN
          R:=REC.PB_DOB;
       -- ELSE
        -- R:=R||','||REC.PB_DOB;
        END IF;
      END LOOP;
     CLOSE C;
     RETURN R;
END GET_PEN_SPOUSE_DOB;
FUNCTION GET_PEN_SPOUSE_SIN(CLT_ID VARCHAR2,PL_ID VARCHAR2,EE_ID VARCHAR2,MTH DATE) RETURN VARCHAR2 AS
  R VARCHAR2(9);
  CURSOR C IS
    SELECT PB_BEN_SIN FROM TBL_PEN_BENEFICIARY WHERE PB_CLIENT=CLT_ID AND PB_PLAN=PL_ID AND PB_ID=EE_ID AND NVL(PB_RELATION,'X') IN ('W','H','SP') AND  (PB_TERM_DATE IS NULL OR (PB_TERM_DATE IS NOT NULL AND PB_TERM_DATE<=NVL(MTH,SYSDATE)))  ORDER BY PB_CLIENT,PB_PLAN,PB_ID;
  REC C%ROWTYPE;
  I NUMBER:=1;
  BEGIN
      OPEN C;
      LOOP
         FETCH C INTO REC;
         EXIT WHEN C%NOTFOUND;
         IF I=1 THEN
          R:=REC.PB_BEN_SIN;
       -- ELSE
        -- R:=R||','||REC.PB_DOB;
        END IF;
      END LOOP;
     CLOSE C;
     RETURN R;
END GET_PEN_SPOUSE_SIN;
/*
FUNCTION GET_PEN_MTHLY_PENSION(CLT_ID VARCHAR2,PL_ID VARCHAR2,EE_ID VARCHAR2,CDATE DATE, DOB DATE) RETURN NUMBER AS

   CURSOR C IS
       SELECT TPCF_RATE,TPCF_UNIT_TYPE,DECODE(NVL(TPCF_UNIT_QTY,0),0,1,TPCF_UNIT_QTY) TPCF_UNIT_QTY,TPCF_EFF_DATE,NVL(TPCF_TERM_DATE,CDATE+1) TERM_DATE FROM TBL_PEN_CALC_FORMULA WHERE TPCF_CLIENT=CLT_ID AND TPCF_PLAN=PL_ID AND TPCF_EFF_DATE<=NVL(CDATE,SYSDATE);
    REC C%ROWTYPE;
 PEN_AMT NUMBER(12,2):=0; 
 R NUMBER(12,6):=0;
BEGIN
PEN_AMT:=0;
OPEN C;
LOOP 
  FETCH C INTO REC;
  EXIT WHEN C%NOTFOUND;
  IF REC.TPCF_UNIT_TYPE='S' THEN
      SELECT SUM(ANN_CRED_SERV) INTO R FROM TBL_ANNUAL WHERE ANN_CLIENT=CLT_ID AND ANN_PLAN=PL_ID AND ANN_ID=EE_ID AND (ANN_YEAR BETWEEN TO_NUMBER(TO_CHAR(REC.TPCF_EFF_DATE,'RRRR')) AND TO_NUMBER(TO_CHAR(REC.TERM_DATE,'RRRR'))) AND NVL(ANN_STATUS,'C') NOT IN ('T','W') ;
  ELSIF REC.TPCF_UNIT_TYPE='H' THEN
   SELECT SUM(MPU_UNITS) INTO R FROM TBL_MEM_UNITS WHERE MU_CLIENT=CLT_ID AND MPU_PLAN=PL_ID AND MPU_ID=EE_ID AND (TRUNC(MPU_PERIOD) BETWEEN TRUNC(REC.TPCF_EFF_DATE) AND TRUNC(REC.TERM_DATE)) AND (((TRUNC(MPU_PERIOD)>=(SELECT NVL(PENM_STATUS_DATE,TO_DATE('01-JAN-1900','DD-MON-RRRR')) FROM TBL_PENMAST WHERE PENM_CLIENT=CLT_ID AND PENM_PLAN=PL_ID AND PENM_ID=MPU_ID)) OR (NOT EXISTS (SELECT LTRIM(RTRIM(TMPSH_STATUS)) FROM TBL_MEM_PEN_STATUS_HIST WHERE TMPSH_CLIENT=CLT_ID AND TMPSH_PLAN=PL_ID AND TMPSH_MEM_ID=MPU_ID AND NVL(TRIM(RTRIM(TMPSH_STATUS)),'C')  IN ('W')))));
  ELSIF REC.TPCF_UNIT_TYPE='C' THEN
   SELECT SUM(MPU_AMT) INTO R FROM TBL_MEM_UNITS WHERE MU_CLIENT=CLT_ID AND MPU_PLAN=PL_ID AND MPU_ID=EE_ID AND (TRUNC(MPU_PERIOD) BETWEEN TRUNC(REC.TPCF_EFF_DATE) AND TRUNC(REC.TERM_DATE))  AND (((TRUNC(MPU_PERIOD)>=(SELECT NVL(PENM_STATUS_DATE,TO_DATE('01-JAN-1900','DD-MON-RRRR')) FROM TBL_PENMAST WHERE PENM_CLIENT=CLT_ID AND PENM_PLAN=PL_ID AND PENM_ID=MPU_ID)) OR (NOT EXISTS (SELECT LTRIM(RTRIM(TMPSH_STATUS)) FROM TBL_MEM_PEN_STATUS_HIST WHERE TMPSH_CLIENT=CLT_ID AND TMPSH_PLAN=PL_ID AND TMPSH_MEM_ID=MPU_ID AND NVL((LTRIM(RTRIM(TMPSH_STATUS))),'C') IN ('W')))))   ;
  ELSE 
    R:=0;
  END IF;
   PEN_AMT:=NVL(PEN_AMT,0)+((NVL(R,0)/REC.TPCF_UNIT_QTY)*NVL(REC.TPCF_RATE,0));
END LOOP;
CLOSE C;
RETURN greatest(NVL(PEN_AMT,0),0);
END;
*/

 FUNCTION GET_PEN_MTHLY_PENSION(CLT_ID VARCHAR2,PL_ID VARCHAR2,EE_ID VARCHAR2,CDATE DATE, DOB DATE) RETURN NUMBER AS

   CURSOR C IS
       SELECT TPCF_RATE,TPCF_UNIT_TYPE,DECODE(NVL(TPCF_UNIT_QTY,0),0,1,TPCF_UNIT_QTY) TPCF_UNIT_QTY,TPCF_EFF_DATE,NVL(TPCF_TERM_DATE,CDATE+1) TERM_DATE FROM TBL_PEN_CALC_FORMULA WHERE TPCF_CLIENT=CLT_ID AND TPCF_PLAN=PL_ID AND TPCF_EFF_DATE<=NVL(CDATE,SYSDATE);
    REC C%ROWTYPE;
 PEN_AMT NUMBER(12,2):=0; 
 R NUMBER(12,6):=0;
 STDATE DATE;
 ST VARCHAR2(10);
 
BEGIN
PEN_AMT:=0;

  SELECT MAX(PENM_STATUS),MAX(PENM_STATUS_DATE),sum(nvl(penm_past_pension,0)+nvl(penm_curr_pension,0)) INTO ST,STDATE,pen_amt FROM TBL_PENMAST WHERE PENM_CLIENT=CLT_ID AND PENM_PLAN=PL_ID AND PENM_ID=EE_ID;
  if nvl(pen_amt,0)=0 then
OPEN C;
LOOP 
  FETCH C INTO REC;
  EXIT WHEN C%NOTFOUND;
 
  IF STDATE IS NULL THEN 
    SELECT MAX(A.TMPSH_STATUS),MAX(A.TMPSH_STATUS_DATE) INTO ST,STDATE FROM TBL_MEM_PEN_STATUS_HIST A WHERE A.TMPSH_CLIENT=CLT_ID AND A.TMPSH_PLAN=PL_ID AND A.TMPSH_MEM_ID=EE_ID AND A.TMPSH_STATUS_DATE=(SELECT MAX(B.TMPSH_STATUS_DATE) FROM TBL_MEM_PEN_STATUS_HIST B WHERE B.TMPSH_CLIENT=CLT_ID AND B.TMPSH_PLAN=PL_ID AND B.TMPSH_MEM_ID=EE_ID);
  END IF;
  IF REC.TPCF_UNIT_TYPE='S' THEN
      SELECT SUM(ANN_CRED_SERV) INTO R FROM TBL_ANNUAL WHERE ANN_CLIENT=CLT_ID AND ANN_PLAN=PL_ID AND ANN_ID=EE_ID AND ANN_YEAR>=NVL(TO_NUMBER(TO_CHAR(STDATE,'RRRR')),ANN_YEAR) AND (ANN_YEAR BETWEEN TO_NUMBER(TO_CHAR(REC.TPCF_EFF_DATE,'RRRR')) AND TO_NUMBER(TO_CHAR(REC.TERM_DATE,'RRRR'))) AND NVL(ANN_STATUS,'C') NOT IN ('T','W') ;
  ELSIF REC.TPCF_UNIT_TYPE='H' THEN
   SELECT SUM(MPU_UNITS) INTO R FROM TBL_MEM_UNITS WHERE MU_CLIENT=CLT_ID AND MPU_PLAN=PL_ID AND MPU_ID=EE_ID AND NVL(MPU_FROM,MPU_PERIOD)>=STDATE AND (TRUNC(MPU_PERIOD) BETWEEN TRUNC(REC.TPCF_EFF_DATE) AND TRUNC(REC.TERM_DATE)) AND (((TRUNC(MPU_PERIOD)>=(SELECT NVL(PENM_STATUS_DATE,TO_DATE('01-JAN-1900','DD-MON-RRRR')) FROM TBL_PENMAST WHERE PENM_CLIENT=CLT_ID AND PENM_PLAN=PL_ID AND PENM_ID=MPU_ID)) OR (NOT EXISTS (SELECT LTRIM(RTRIM(TMPSH_STATUS)) FROM TBL_MEM_PEN_STATUS_HIST WHERE TMPSH_CLIENT=CLT_ID AND TMPSH_PLAN=PL_ID AND TMPSH_MEM_ID=MPU_ID AND NVL(TRIM(RTRIM(TMPSH_STATUS)),'C')  IN ('W')))));
  ELSIF REC.TPCF_UNIT_TYPE='C' THEN
   SELECT SUM(MPU_AMT) INTO R FROM TBL_MEM_UNITS WHERE MU_CLIENT=CLT_ID AND MPU_PLAN=PL_ID AND MPU_ID=EE_ID AND  NVL(MPU_FROM,MPU_PERIOD)>=STDATE AND  (TRUNC(MPU_PERIOD) BETWEEN TRUNC(REC.TPCF_EFF_DATE) AND TRUNC(REC.TERM_DATE))  AND (((TRUNC(MPU_PERIOD)>=(SELECT NVL(PENM_STATUS_DATE,TO_DATE('01-JAN-1900','DD-MON-RRRR')) FROM TBL_PENMAST WHERE PENM_CLIENT=CLT_ID AND PENM_PLAN=PL_ID AND PENM_ID=MPU_ID)) OR (NOT EXISTS (SELECT LTRIM(RTRIM(TMPSH_STATUS)) FROM TBL_MEM_PEN_STATUS_HIST WHERE TMPSH_CLIENT=CLT_ID AND TMPSH_PLAN=PL_ID AND TMPSH_MEM_ID=MPU_ID AND NVL((LTRIM(RTRIM(TMPSH_STATUS))),'C') IN ('W')))))   ;
  ELSE 
    R:=0;
  END IF;
   PEN_AMT:=NVL(PEN_AMT,0)+((NVL(R,0)/REC.TPCF_UNIT_QTY)*NVL(REC.TPCF_RATE,0));

END LOOP;
CLOSE C;
   end if;
RETURN greatest(NVL(PEN_AMT,0),0);
END;
FUNCTION GET_OPTION_FACTOR(CLT_ID VARCHAR2,PL_ID VARCHAR2,DT DATE,MEM_AGE NUMBER,SP_AGE NUMBER,FROM_OPTION VARCHAR2,TO_OPTION VARCHAR2) RETURN NUMBER AS
R NUMBER(12,6):=0;
CNT NUMBER:=0;
BEGIN
SELECT COUNT(*) INTO CNT FROM TBL_OPTION_FACTORS_JS A WHERE A.OFJS_CLIENT=CLT_ID AND A.OFJS_PLAN=PL_ID AND A.OFJS_FROM_OPTION=FROM_OPTION AND A.OFJS_TO_OPTION=TO_OPTION AND A.OFJS_EFF_DATE=(SELECT MAX(B.OFJS_EFF_DATE) FROM  TBL_OPTION_FACTORS_JS B WHERE B.OFJS_CLIENT=CLT_ID AND B.OFJS_PLAN=PL_ID AND B.OFJS_FROM_OPTION=FROM_OPTION AND B.OFJS_TO_OPTION=TO_OPTION AND B.OFJS_EFF_DATE<=dt);
IF NVL(CNT,0)>0 THEN
  SELECT NVL(MAX(A.OFJS_FACTOR),0) INTO R FROM TBL_OPTION_FACTORS_JS A WHERE A.OFJS_CLIENT=CLT_ID AND A.OFJS_PLAN=PL_ID AND A.OFJS_MEM_AGE=MEM_AGE AND A.OFJS_SP_AGE=SP_AGE AND A.OFJS_FROM_OPTION=FROM_OPTION AND A.OFJS_TO_OPTION=TO_OPTION AND A.OFJS_EFF_DATE=(SELECT MAX(B.OFJS_EFF_DATE) FROM  TBL_OPTION_FACTORS_JS B WHERE B.OFJS_CLIENT=CLT_ID AND B.OFJS_PLAN=PL_ID AND B.OFJS_EFF_DATE<=dt);

ELSE
    SELECT NVL(MAX(A.OFLG_FACTOR),0) INTO R FROM TBL_OPTION_FACTORS_LO_G A WHERE A.OFLG_CLIENT=CLT_ID AND A.OFLG_PLAN=PL_ID AND A.OFLG_AGE=MEM_AGE AND A.OFLG_FROM_OPTION=FROM_OPTION AND A.OFLG_TO_OPTION=TO_OPTION AND A.OFLG_EFF_DATE=(SELECT MAX(B.OFLG_EFF_DATE) FROM  TBL_OPTION_FACTORS_LO_G B WHERE B.OFLG_CLIENT=CLT_ID AND B.OFLG_PLAN=PL_ID AND B.OFLG_EFF_DATE<=dt);
END IF;


RETURN R;
END;
FUNCTION GET_CONT_RATE(CLT_ID VARCHAR2,PL_ID VARCHAR2,DT DATE,AGREE_ID VARCHAR2,ER_ID VARCHAR2,MEM_ID VARCHAR2,OCCU_ID VARCHAR2,CONT_BENEFIT VARCHAR2,EARNED VARCHAR2) RETURN NUMBER AS
RT TBL_AGREEMENT_DETAILS.TAD_RATE%TYPE;
EARNED1 VARCHAR2(30);
serv_yrs number:=0;
BEGIN
IF UPPER(NVL(LTRIM(RTRIM(EARNED)),'N'))='Y' THEN
     EARNED1:='EARN';
ELSE
     EARNED1:='WORK';
END IF;

IF CONT_BENEFIT='PENSION' THEN
BEGIN
select nvl(sum(abs(months_between(nvl(penm_status_date,dt),dt)/12)),0) into serv_yrs from tbl_penmast where penm_client=clt_id and penm_plan=pl_id and penm_id=mem_id;
select nvl(max(a.tad_year_id),0) into serv_yrs from TBL_AGREEMENT_DETAILS A WHERE A.TAD_CLIENT_ID=CLT_ID AND A.TAD_PLAN_ID=PL_ID AND A.TAD_AGREE_ID=AGREE_ID AND NVL(A.TAD_UNIT_TYPE,'WORK')=EARNED1  AND NVL(A.TAD_OCCUP_ID,'%') LIKE NVL(OCCU_ID,'%') AND (NVL(A.TAD_FUND,'%') LIKE '%PEN%' OR NVL(A.TAD_FUND,'%') LIKE '%MEM%' OR NVL(A.TAD_FUND,'%') LIKE '%EMP%') AND nvl(a.tad_year_id,0)<=nvl(serv_yrs,0) and A.TAD_EFF_DATE=(SELECT MAX(B.TAD_EFF_DATE) FROM  TBL_AGREEMENT_DETAILS B WHERE B.TAD_CLIENT_ID=CLT_ID AND B.TAD_PLAN_ID=PL_ID AND B.TAD_AGREE_ID=AGREE_ID and NVL(B.TAD_OCCUP_ID,'%') LIKE NVL(OCCU_ID,'%')  AND NVL(B.TAD_UNIT_TYPE,'WORK')=EARNED1 AND  (NVL(B.TAD_FUND,'%') LIKE '%PEN%' OR NVL(B.TAD_FUND,'%') LIKE '%MEM%' OR NVL(B.TAD_FUND,'%') LIKE '%EMP%') and B.TAD_EFF_DATE<=DT);
SELECT DISTINCT A.TAD_RATE INTO RT FROM TBL_AGREEMENT_DETAILS A WHERE A.TAD_CLIENT_ID=CLT_ID AND A.TAD_PLAN_ID=PL_ID AND A.TAD_AGREE_ID=AGREE_ID AND NVL(A.TAD_UNIT_TYPE,'WORK')=EARNED1  AND NVL(A.TAD_OCCUP_ID,'%') LIKE NVL(OCCU_ID,'%') AND (NVL(A.TAD_FUND,'%') LIKE '%PEN%' OR NVL(A.TAD_FUND,'%') LIKE '%MEM%' OR NVL(A.TAD_FUND,'%') LIKE '%EMP%') AND nvl(a.tad_year_id,0)=nvl(serv_yrs,0) and A.TAD_EFF_DATE=(SELECT MAX(B.TAD_EFF_DATE) FROM  TBL_AGREEMENT_DETAILS B WHERE B.TAD_CLIENT_ID=CLT_ID AND B.TAD_PLAN_ID=PL_ID AND B.TAD_AGREE_ID=AGREE_ID AND nvl(b.tad_year_id,0)=nvl(serv_yrs,0) and NVL(B.TAD_OCCUP_ID,'%') LIKE NVL(OCCU_ID,'%')  AND NVL(B.TAD_UNIT_TYPE,'WORK')=EARNED1 AND  (NVL(B.TAD_FUND,'%') LIKE '%PEN%' OR NVL(B.TAD_FUND,'%') LIKE '%MEM%' OR NVL(B.TAD_FUND,'%') LIKE '%EMP%') and B.TAD_EFF_DATE<=DT);
EXCEPTION WHEN OTHERS THEN RT:=0;
END;
ELSIF CONT_BENEFIT='HW' THEN
BEGIN
select nvl(sum(abs(months_between(nvl(HW_EFF_date,dt),dt)/12)),0) into serv_yrs from tbl_HW where HW_client=clt_id and HW_plan=pl_id and HW_id=mem_id;
select nvl(max(a.tad_year_id),0) into serv_yrs FROM TBL_AGREEMENT_DETAILS A WHERE A.TAD_CLIENT_ID=CLT_ID AND A.TAD_PLAN_ID=PL_ID AND A.TAD_AGREE_ID=AGREE_ID AND  NVL(A.TAD_FUND,'%') LIKE '%HW%' AND NVL(A.TAD_OCCUP_ID,'%') LIKE NVL(OCCU_ID,'%') AND NVL(A.TAD_UNIT_TYPE,'%') LIKE EARNED1  AND A.TAD_EFF_DATE=(SELECT MAX(B.TAD_EFF_DATE) FROM  TBL_AGREEMENT_DETAILS B WHERE B.TAD_CLIENT_ID=CLT_ID AND B.TAD_PLAN_ID=PL_ID AND B.TAD_AGREE_ID=AGREE_ID AND  NVL(B.TAD_FUND,'%') LIKE '%HW%'  AND NVL(B.TAD_OCCUP_ID,'%') LIKE NVL(OCCU_ID,'%')  AND NVL(B.TAD_UNIT_TYPE,'%') LIKE EARNED1 and B.TAD_EFF_DATE<=DT);
SELECT DISTINCT A.TAD_RATE INTO RT FROM TBL_AGREEMENT_DETAILS A WHERE A.TAD_CLIENT_ID=CLT_ID AND A.TAD_PLAN_ID=PL_ID AND A.TAD_AGREE_ID=AGREE_ID AND  NVL(A.TAD_FUND,'%') LIKE '%HW%'  AND  NVL(A.TAD_OCCUP_ID,'%') LIKE NVL(OCCU_ID,'%') AND NVL(A.TAD_UNIT_TYPE,'%') LIKE EARNED1  AND A.TAD_EFF_DATE=(SELECT MAX(B.TAD_EFF_DATE) FROM  TBL_AGREEMENT_DETAILS B WHERE B.TAD_CLIENT_ID=CLT_ID AND B.TAD_PLAN_ID=PL_ID AND B.TAD_AGREE_ID=AGREE_ID AND  NVL(B.TAD_FUND,'%') LIKE '%HW%'  AND NVL(B.TAD_OCCUP_ID,'%') LIKE NVL(OCCU_ID,'%')  AND NVL(B.TAD_UNIT_TYPE,'%') LIKE EARNED1 and B.TAD_EFF_DATE<=DT);
EXCEPTION WHEN OTHERS THEN RT:=0;
END;
ELSE
BEGIN
SELECT DISTINCT A.TAD_RATE INTO RT FROM TBL_AGREEMENT_DETAILS A WHERE A.TAD_CLIENT_ID=CLT_ID AND A.TAD_PLAN_ID=PL_ID AND A.TAD_AGREE_ID=AGREE_ID AND NVL(A.TAD_OCCUP_ID,'%') LIKE NVL(OCCU_ID,'%') AND NVL(A.TAD_UNIT_TYPE,'%') LIKE CONT_BENEFIT AND A.TAD_EFF_DATE=(SELECT MAX(B.TAD_EFF_DATE) FROM  TBL_AGREEMENT_DETAILS B WHERE B.TAD_CLIENT_ID=CLT_ID AND B.TAD_PLAN_ID=PL_ID AND B.TAD_AGREE_ID=AGREE_ID AND NVL(B.TAD_OCCUP_ID,'%') LIKE NVL(OCCU_ID,'%')  AND NVL(B.TAD_UNIT_TYPE,'%') LIKE CONT_BENEFIT and B.TAD_EFF_DATE<=DT);
EXCEPTION WHEN OTHERS THEN RT:=0;
END;
END IF;

RETURN RT;
END;
PROCEDURE PENSION_OPTIONS(CLT_ID VARCHAR2,PL_ID VARCHAR2,EE_ID VARCHAR2,RET_DATE DATE, MEM_DOB DATE,SP_DOB DATE) AS
MEM_AGE NUMBER(12,6):=0;
SP_AGE NUMBER(12,6):=0;
UNRED_PEN_AMT NUMBER(12,2):=0;
OAS NUMBER(12,2):=0;
CPP NUMBER(12,2):=0;
PRE_PEN NUMBER(12,2):=0;
POST_PEN NUMBER(12,2):=0;
F1 NUMBER(12,6):=0;
F2 NUMBER(12,6):=0;
F3 NUMBER(12,6):=0;
F4 NUMBER(12,6):=0;
M1 NUMBER;
M2 NUMBER;
S1 NUMBER;
S2 NUMBER;
FACT1 NUMBER(12,6):=0;
FACT2 NUMBER(12,6):=0;
MTH1 NUMBER(12,6):=0;
MTH2 NUMBER(12,6):=0;
PEN_AMT NUMBER(12,2):=0;
R NUMBER(12,6):=0;
RED_AMT NUMBER(12,2):=0;
CNT NUMBER:=0;
CURSOR C IS
  (SELECT DISTINCT A.OFLG_FROM_OPTION FROM_OPTION,A.OFLG_TO_OPTION TO_OPTION FROM TBL_OPTION_FACTORS_LO_G A WHERE A.OFLG_CLIENT=CLT_ID AND A.OFLG_PLAN=PL_ID AND A.OFLG_EFF_DATE=(SELECT MAX(B.OFLG_EFF_DATE) FROM  TBL_OPTION_FACTORS_LO_G B WHERE B.OFLG_EFF_DATE<=RET_DATE)) UNION (SELECT DISTINCT A.OFJS_FROM_OPTION,A.OFJS_TO_OPTION FROM TBL_OPTION_FACTORS_JS A WHERE A.OFJS_CLIENT=CLT_ID AND A.OFJS_PLAN=PL_ID AND A.OFJS_EFF_DATE=(SELECT MAX(B.OFJS_EFF_DATE) FROM  TBL_OPTION_FACTORS_JS B WHERE B.OFJS_EFF_DATE<=RET_DATE));
REC C%ROWTYPE;
RET_TYPE VARCHAR2(100);
BEGIN
IF MEM_DOB IS NOT NULL AND RET_DATE IS NOT NULL THEN
OAS:=GET_OAS(RET_DATE);
CPP:=GET_CPP(RET_DATE);
 MEM_AGE:=NVL(AGE_CALC(CLT_ID,PL_ID,RET_DATE,MEM_DOB),0);
 IF SP_DOB IS NOT NULL THEN
   SP_AGE:=AGE_CALC(CLT_ID,PL_ID,RET_DATE,SP_DOB);
 ELSE
  SP_AGE:=0;
 END IF;
 M1:=TRUNC(MEM_AGE);
 M2:=M1+1;
 MTH1:=MEM_AGE-M1;

 IF NVL(SP_AGE,0)<>0 THEN
 S1:=TRUNC(SP_AGE);
 S2:=S1+1;
 MTH2:=SP_AGE-S1;
 ELSE
  S1:=0;
  S2:=0;
  MTH2:=0;
 END IF;
IF MEM_DOB>TO_DATE('01-APR-1955','DD-MON-RRRR') THEN
   UNRED_PEN_AMT:=GET_PEN_MTHLY_PENSION(CLT_ID ,PL_ID ,EE_ID ,RET_DATE ,MEM_DOB);
ELSE
PRE_PEN:=GET_PEN_MTHLY_PENSION(CLT_ID ,PL_ID ,EE_ID ,TO_DATE('31-DEC-2004','DD-MON-RRRR'),MEM_DOB);
IF SP_DOB IS NOT NULL THEN
   F1:=GET_OPTION_FACTOR(CLT_ID ,PL_ID,RET_DATE,M1,S1,'GS50','LO') ;
F2:=GET_OPTION_FACTOR(CLT_ID ,PL_ID,RET_DATE,M2,S1,'GS50','LO') ;
F3:=GET_OPTION_FACTOR(CLT_ID ,PL_ID,RET_DATE,M1,S2,'GS50','LO') ;
F4:=GET_OPTION_FACTOR(CLT_ID ,PL_ID,RET_DATE,M2,S2,'GS50','LO') ;
FACT1:=((F2-F1)*MTH1)+F1;
FACT2:=((F4-F3)*MTH1)+F3;
R:=((FACT2-FACT1)*MTH2)+FACT1; 
ELSE
   F1:=GET_OPTION_FACTOR(CLT_ID ,PL_ID,RET_DATE,M1,S1,'G5','LO') ;
F2:=GET_OPTION_FACTOR(CLT_ID ,PL_ID,RET_DATE,M2,S1,'G5','LO') ;
F3:=GET_OPTION_FACTOR(CLT_ID ,PL_ID,RET_DATE,M1,S2,'G5','LO') ;
F4:=GET_OPTION_FACTOR(CLT_ID ,PL_ID,RET_DATE,M2,S2,'G5','LO') ;
FACT1:=((F2-F1)*MTH1)+F1;
FACT2:=((F4-F3)*MTH1)+F3;
R:=((FACT2-FACT1)*MTH2)+FACT1; 
END IF;
PRE_PEN:=NVL(PRE_PEN,0)*NVL(R,0);
 POST_PEN:=GET_PEN_MTHLY_PENSION(CLT_ID ,PL_ID ,EE_ID ,RET_DATE ,MEM_DOB)-NVL(PRE_PEN,0);
 UNRED_PEN_AMT:=NVL(PRE_PEN,0)+NVL(POST_PEN,0);
END IF;
PEN_AMT:=greatest(UNRED_PEN_AMT-RED_AMT,0);

RET_TYPE:=RETIREMENT_ELIGIBLE_TYPE(CLT_ID ,PL_ID ,EE_ID ,RET_DATE ,MEM_DOB) ;
Insert into TBL_PEN_OPT_HEADER (TPH_CLIENT,TPH_PLAN,TPH_MEM_ID,TPH_RET_DATE,TPH_OAS_AMT,TPH_CPP_AMT,TPH_RED_AMT,TPH_RET_TYPE,TPH_NORM_FORM,TPH_MEM_AGE,TPH_SP_AGE,TPH_CALC_DATE,TPH_CREATE_BY,TPH_CREATED_DATE) values (CLT_ID,PL_ID,EE_ID,RET_DATE,OAS,CPP,RED_AMT,RET_TYPE,'LO',MEM_AGE,SP_AGE,SYSDATE,'SYSTEM',SYSDATE);

 OPEN C;
 LOOP 
   FETCH C INTO REC;
   EXIT WHEN C%NOTFOUND;
F1:=GET_OPTION_FACTOR(CLT_ID ,PL_ID,RET_DATE,M1,S1,REC.FROM_OPTION,REC.TO_OPTION) ;
F2:=GET_OPTION_FACTOR(CLT_ID ,PL_ID,RET_DATE,M2,S1,REC.FROM_OPTION,REC.TO_OPTION) ;
F3:=GET_OPTION_FACTOR(CLT_ID ,PL_ID,RET_DATE,M1,S2,REC.FROM_OPTION,REC.TO_OPTION) ;
F4:=GET_OPTION_FACTOR(CLT_ID ,PL_ID,RET_DATE,M2,S2,REC.FROM_OPTION,REC.TO_OPTION) ;
FACT1:=((F2-F1)*MTH1)+F1;
FACT2:=((F4-F3)*MTH1)+F3;

R:=((FACT2-FACT1)*MTH2)+FACT1;

IF NVL(R,0)>0 THEN
SELECT COUNT(*) INTO CNT FROM TBL_PEN_OPT_DETAILS WHERE TPO_CLIENT=CLT_ID AND TPO_PLAN=PL_ID AND TPO_MEM_ID=EE_ID AND TPO_PEN_FORM= SUBSTR(REC.TO_OPTION,1,(DECODE(INSTR(REC.TO_OPTION,'_',1),0,LENGTH(REC.TO_OPTION)+1,INSTR(REC.TO_OPTION,'_',1)))-1) ;
IF NVL(CNT,0)>0 THEN
IF REC.TO_OPTION LIKE '%_INT' THEN
UPDATE TBL_PEN_OPT_DETAILS SET TPO_INT_FACTOR=R,TPO_INT_AMT=PEN_AMT+(R*(NVL(OAS,0)+NVL(CPP,0))) WHERE TPO_CLIENT=CLT_ID AND TPO_PLAN=PL_ID AND TPO_MEM_ID=EE_ID AND TPO_PEN_FORM= SUBSTR(REC.TO_OPTION,1,(DECODE(INSTR(REC.TO_OPTION,'_',1),0,LENGTH(REC.TO_OPTION)+1,INSTR(REC.TO_OPTION,'_',1)))-1) ;
ELSE
UPDATE TBL_PEN_OPT_DETAILS SET TPO_FACTOR=R,TPO_PEN_AMT=PEN_AMT*R WHERE TPO_CLIENT=CLT_ID AND TPO_PLAN=PL_ID AND TPO_MEM_ID=EE_ID AND TPO_PEN_FORM= SUBSTR(REC.TO_OPTION,1,(DECODE(INSTR(REC.TO_OPTION,'_',1),0,LENGTH(REC.TO_OPTION)+1,INSTR(REC.TO_OPTION,'_',1)))-1); 
END IF;
ELSE 
IF REC.TO_OPTION NOT LIKE '%_INT' THEN
 INSERT INTO TBL_PEN_OPT_DETAILS(TPO_CLIENT,TPO_PLAN,TPO_MEM_ID,TPO_PEN_FORM,TPO_PEN_AMT,TPO_FACTOR,TPO_INT_AMT,TPO_INT_FACTOR,TPO_CODE) VALUES (CLT_ID,PL_ID,EE_ID, SUBSTR(REC.TO_OPTION,1,(DECODE(INSTR(REC.TO_OPTION,'_',1),0,LENGTH(REC.TO_OPTION)+1,INSTR(REC.TO_OPTION,'_',1)))-1) ,PEN_AMT*R,R,0,0, SUBSTR(REC.TO_OPTION,1,(DECODE(INSTR(REC.TO_OPTION,'_',1),0,LENGTH(REC.TO_OPTION)+1,INSTR(REC.TO_OPTION,'_',1)))-1) );
ELSE
 INSERT INTO TBL_PEN_OPT_DETAILS(TPO_CLIENT,TPO_PLAN,TPO_MEM_ID,TPO_PEN_FORM,TPO_PEN_AMT,TPO_FACTOR,TPO_INT_AMT,TPO_INT_FACTOR,TPO_CODE) VALUES (CLT_ID,PL_ID,EE_ID, SUBSTR(REC.TO_OPTION,1,(DECODE(INSTR(REC.TO_OPTION,'_',1),0,LENGTH(REC.TO_OPTION)+1,INSTR(REC.TO_OPTION,'_',1)))-1) ,0,0,PEN_AMT+(R*(NVL(OAS,0)+NVL(CPP,0))),R, SUBSTR(REC.TO_OPTION,1,(DECODE(INSTR(REC.TO_OPTION,'_',1),0,LENGTH(REC.TO_OPTION)+1,INSTR(REC.TO_OPTION,'_',1)))-1) );
END IF;
END IF;
END IF;
END LOOP;
CLOSE C;
END IF;


END;
PROCEDURE PEN_STATUS_CHANGE(CLT_ID VARCHAR2,PL_ID VARCHAR2,EE_ID VARCHAR2,NEW_STATUS VARCHAR2,NEW_STATUS_DATE DATE,USR VARCHAR2) AS
OLD_ST VARCHAR2(100);
OLD_ST_DATE DATE;
BEGIN

  SELECT DISTINCT PENM_STATUS,PENM_STATUS_DATE INTO OLD_ST,OLD_ST_DATE FROM TBL_PENMAST WHERE PENM_CLIENT=CLT_ID AND PENM_PLAN=PL_ID AND PENM_ID=EE_ID;
 Insert into TBL_MEM_PEN_STATUS_HIST (TMPSH_CLIENT,TMPSH_PLAN,TMPSH_MEM_ID,TMPSH_STATUS,TMPSH_STATUS_DATE,TMPSH_CREATED_DATE,TMPSH_CREATED_BY) VALUES (CLT_ID,PL_ID,EE_ID,OLD_ST,OLD_ST_DATE,SYSDATE,USR);
 IF NEW_STATUS IN ('R','W','VW','T') THEN
 UPDATE TBL_PENMAST SET PENM_STATUS=NEW_STATUS,PENM_STATUS_DATE=NEW_STATUS_DATE,PENM_CURR_PENSION=0,PENM_PAST_PENSION=0 WHERE PENM_CLIENT=CLT_ID AND PENM_PLAN=PL_ID AND PENM_ID=EE_ID;
 ELSE
 UPDATE TBL_PENMAST SET PENM_STATUS=NEW_STATUS,PENM_STATUS_DATE=NEW_STATUS_DATE WHERE PENM_CLIENT=CLT_ID AND PENM_PLAN=PL_ID AND PENM_ID=EE_ID;
 END IF;


END;
PROCEDURE RETIREMENT_PROCESS(CLT_ID VARCHAR2,PL_ID VARCHAR2,EE_ID VARCHAR2,RET_DATE DATE,PEN_OPTION VARCHAR2,INT_FLAG VARCHAR2,USR VARCHAR2) IS
 CURSOR C IS
    select TPH_CLIENT,TPH_PLAN,TPH_MEM_ID,TPH_RET_DATE,TPH_OAS_AMT,TPH_CPP_AMT,TPH_RED_AMT,TPH_RET_TYPE,TPH_NORM_FORM,TPH_MEM_AGE,TPH_SP_AGE,TPH_CALC_DATE,TPO_PEN_FORM,TPO_PEN_AMT,TPO_FACTOR,TPO_INT_AMT,TPO_INT_FACTOR,TPO_ID,TPO_CODE from tbl_pen_opt_header,tbl_pen_opt_details where TPO_CLIENT=CLT_ID AND TPO_PLAN=PL_ID AND tpo_client=tph_client and tpo_plan=tph_plan and  tph_mem_id=tpo_mem_id and tph_mem_id=ee_id  AND TPO_PEN_FORM=PEN_OPTION;
 REC C%ROWTYPE;
PEN_AMT NUMBER(12,2):=0;
GMTHS NUMBER:=0;
SURVIVOR_PER NUMBER(12,6):=0;
SURVIVOR_SIN NUMBER;
END_GTEE_DATE DATE;
INT_AMT NUMBER(12,2):=0;
TAX_CODE VARCHAR2(20);
PEN_OPTION1 VARCHAR2(100);
BEGIN
OPEN C;
LOOP
   FETCH C INTO REC;
   EXIT WHEN C%NOTFOUND;
   IF NVL(INT_FLAG,'N')='Y' THEN
   IF UPPER(REC.TPH_RET_TYPE) NOT IN ('NR','PR') THEN
       PEN_AMT:=REC.TPO_INT_AMT;
   ELSE
      --PEN_AMT:=ROUND(greatest((REC.tpo_PEN_amt -((1-NVL(REC.TPO_INT_FACTOR,0))*(nvl(REC.tph_oas_amt,0) + nvl(REC.tph_cpp_amt,0)) ) ),0),2);
       PEN_AMT:=REC.TPO_PEN_AMT;

     END IF;
  ELSE
       PEN_AMT:=REC.TPO_PEN_AMT;
  END IF;
  IF PEN_OPTION LIKE 'G%' THEN
     IF PEN_OPTION LIKE 'GS%' THEN
         GMTHS:=60;
      ELSE
         GMTHS:=TO_NUMBER(TO_CHAR(SUBSTR(PEN_OPTION,2,2)));
      END IF;
      END_GTEE_DATE:=ADD_MONTHS(RET_DATE,GMTHS);
  ELSE
     GMTHS:=0;
     END_GTEE_DATE:=NULL;
  END IF;
  IF PEN_OPTION LIKE 'GS%' OR PEN_OPTION LIKE 'JS%' THEN
     SURVIVOR_PER:=SUBSTR(PEN_OPTION,3,3);
  ELSE
      SURVIVOR_PER:=0;
  END IF;
  BEGIN
  SELECT DISTINCT ID INTO PEN_OPTION1 FROM TBL_PENSION_FORMS WHERE UPPER(LTRIM(RTRIM(OLIVER_TEMP_FORM)))=UPPER(LTRIM(RTRIM(PEN_OPTION)));
  EXCEPTION WHEN  OTHERS THEN PEN_OPTION1:=PEN_OPTION;
  END;
  
Insert into TBL_RETIREES (RET_MEM_ID,RET_CLIENT_ID,RET_PLAN_ID,RET_RETIRE_DATE,RET_PEN_OPTION,RET_PEN_TYPE,RET_PEN_AMT,RET_BRIDGE_AMT,RET_GTEE_MTHS,RET_SURVIVOR_PER,RET_SURVIVOR_SIN,RET_END_GTEE_DATE,RET_SUPP1_AMT,RET_SUPP2_AMT,RET_RED_AMT,RET_TAX_CODE,RET_CREATED_DATE,RET_CREATED_BY,RET_MODIFIED_DATE,RET_MODIFIED_BY) values
(ee_id,CLT_ID,PL_ID,TRUNC(RET_DATE,'MM'),PEN_OPTION1,REC.TPH_RET_TYPE,PEN_AMT,0,GMTHS,SURVIVOR_PER,SURVIVOR_SIN,END_GTEE_DATE,0,0,INT_AMT,TAX_CODE,SYSDATE,USR,SYSDATE,USR);
PEN_STATUS_CHANGE(CLT_ID ,PL_ID ,EE_ID,'R',RET_DATE ,USR);

END LOOP;
CLOSE C;
END;

 FUNCTION get_pen_status (
    clt_id   VARCHAR2,
    pl_id    VARCHAR2,
    mem_id   VARCHAR2
) RETURN VARCHAR2 AS
    v_retval   VARCHAR2(100);
BEGIN
    SELECT
        nvl(
            initcap(tps_status_desc),
            'N/A'
        )
    INTO
        v_retval
    FROM
        tbl_penmast p
        INNER JOIN tbl_pension_status s ON p.penm_status = s.tps_status
    WHERE
            penm_plan =pl_id
        AND
            penm_id =mem_id
        AND
            penm_client =clt_id;
    RETURN v_retval;
EXCEPTION
    WHEN OTHERS THEN
        RETURN 'N/A';
END;

FUNCTION        
 CALC_INTEREST (CLT_ID VARCHAR2,PL_ID VARCHAR2,ID1 NUMBER, YR1 NUMBER,CD DATE,CONTS_TYPE VARCHAR2,ACCT VARCHAR2) RETURN NUMBER IS
R NUMBER(12,2):=0;
INT1 NUMBER(9,6):=0;
ND NUMBER(12,6);
PREV_CONTS NUMBER(12,2):=0;
PREV_CONT_INT NUMBER(12,2):=0;
CURR_CONTS NUMBER(12,2):=0;
curr_int NUMBER(12,2):=0; 
EDATE DATE;
TDATE DATE;
CD1 DATE;
WAIVED_SERVICE NUMBER(12,6):=0;
nd2 number(12,6);
prev_int number(12,2):=0;
BEGIN
IF CD IS NULL THEN
   CD1:=TO_DATE('31-DEC-'||TO_CHAR(YR1),'DD-MON-RRRR');
ELSE
CD1:=CD;
END IF;
SELECT NVL(MAX(EIR_RATE),0) INTO INT1 FROM CONT_INT_RATES WHERE EIR_CLIENT=CLT_ID AND EIR_PLAN=PL_ID AND TO_NUMBER(TO_CHAR(EIR_EFF_DATE,'RRRR'))=YR1 ; 
IF YR1>2010 AND CONTS_TYPE='ER' THEN
if nvl(int1,0)<>0 then
--SELECT MIN(PenM_status_DATE)  INTO EDATE  FROM TBL_PENMAST WHERE PENM_CLIENT=CLT_ID AND PENM_PLAN=PL_ID AND PENM_ID=ID1 AND (TO_NUMBER(TO_CHAR(PenM_status_DATE,'RRRR'))=YR1  );
 IF TDATE IS NOT NULL THEN 
     CD1:=TDATE+1;
  END IF;
  if conts_type='EE' THEN 
 SELECT SUM(NVL(ANN_EE_CONTS,0)),SUM(NVL(ANN_EE_CONTS,0)+decode(nvl(EE_INT,0),0,Calc_Interest(CLT_ID,PL_ID,Ann_Id,Ann_Year,To_Date('31-DEC-'||TO_CHAR(Ann_Year),'DD-MON-RRRR'),'EE',ACCT),NVL(EE_INT,0))) into PREV_CONTS,PREV_cont_int FROM TBL_ANNUAL WHERE ANN_ACCOUNT=ACCT AND ANN_CLIENT=CLT_ID AND ANN_PLAN=PL_ID AND ANN_ID=ID1 AND ANN_YEAR<TO_NUMBER(TO_CHAR(CD,'RRRR')) and ANN_YEAR<YR1 and NVL(ann_status,'A') not  in ('W') order by ann_client,ann_plan,ann_id,ann_account,ann_year,ann_status;
  SELECT SUM(NVL(ANN_EE_CONTS,0)),sum(EE_INT) INTO CURR_CONTS,curr_int FROM TBL_ANNUAL WHERE ANN_CLIENT=CLT_ID AND ANN_PLAN=PL_ID AND ANN_ACCOUNT=ACCT AND ANN_ID=ID1 AND ANN_YEAR=YR1 and NVL(ann_status,'A') NOT in ('W') order by ann_client,ann_plan,ann_id,ann_account,ann_year,ann_status;
   
  ELSIF CONTS_TYPE='ER' THEN
    SELECT SUM(NVL(ANN_ER_CONTS,0)),SUM(NVL(ANN_ER_CONTS,0)+decode(nvl(ER_INT,0),0,Calc_Interest(CLT_ID,PL_ID,Ann_Id,Ann_Year,To_Date('31-DEC-'||TO_CHAR(Ann_Year),'DD-MON-RRRR'),'ER',ACCT),NVL(ER_INT,0))) into PREV_CONTS,PREV_cont_int  FROM TBL_ANNUAL WHERE ANN_ACCOUNT=ACCT AND ANN_CLIENT=CLT_ID AND ANN_PLAN=PL_ID AND ANN_ID=ID1 AND ANN_YEAR<TO_NUMBER(TO_CHAR(CD,'RRRR')) and ANN_YEAR<YR1 and NVL(ann_status,'A') NOT in ('W','TNV')  order by ann_client,ann_plan,ann_id,ann_account,ann_year,ann_status;
  SELECT SUM(NVL(ANN_ER_CONTS,0)),sum(ER_INT) INTO CURR_CONTS,curr_int FROM TBL_ANNUAL WHERE  ANN_CLIENT=CLT_ID AND ANN_PLAN=PL_ID AND ANN_ACCOUNT=ACCT AND ANN_ID=ID1 AND ANN_YEAR=YR1 and NVL(ann_status,'A') NOT in ('W','TNV') order by ann_client,ann_plan,ann_id,ann_account,ann_year,ann_status;
 ELSIF CONTS_TYPE='VOL' THEN
    SELECT SUM(NVL(ANN_VOL_UNITS,0)),SUM(NVL(ANN_VOL_UNITS,0)+decode(nvl(VOL_INT,0),0,Calc_Interest(CLT_ID,PL_ID,Ann_Id,Ann_Year,To_Date('31-DEC-'||TO_CHAR(Ann_Year),'DD-MON-RRRR'),'VOL',ACCT),NVL(VOL_INT,0))) into PREV_CONTS,PREV_cont_int FROM TBL_ANNUAL WHERE ANN_ACCOUNT=ACCT AND ANN_CLIENT=CLT_ID AND ANN_PLAN=PL_ID AND ANN_ID=ID1 AND ANN_YEAR<TO_NUMBER(TO_CHAR(CD,'RRRR')) and ANN_YEAR<YR1 and NVL(ann_status,'A') NOT in ('W')  order by ann_client,ann_plan,ann_id,ann_account,ann_year,ann_status;
  SELECT SUM(NVL(ANN_VOL_UNITS,0)),sum(VOL_INT) INTO CURR_CONTS,curr_int FROM TBL_ANNUAL WHERE ANN_ACCOUNT=ACCT AND ANN_CLIENT=CLT_ID AND ANN_PLAN=PL_ID AND ANN_ID=ID1 AND ANN_YEAR=YR1 and NVL(ann_status,'A') NOT in ('W')  order by ann_client,ann_plan,ann_id,ann_account,ann_year,ann_status;
END IF;
   
   IF EDATE IS NOT NULL THEN
      ND :=(CD1-greatest(EDATE-1,TO_DATE('01-JAN-'||TO_CHAR(YR1),'DD-MON-RRRR')))/365;
    ELSE 
  
   
   nd:=1;
   --END IF;
   END IF;
   
  -- IF to_number(To_char(tdate,'rrrr'))=yr1  THEN
  --if cd1=tdate+1 then
      --  ND2:=(365-to_number(to_char(cd1,'ddd')))/365;
  --else
  --if edate is not null and  to_number(to_char(edate,'rrrr')) =yr1 and tdate is not null then
       -- nd2:=(tdate-edate+1)/365;
  --else
      nd2:=1;
      
  --end if;
 -- end if;
        
  -- else
      --  nd2:=1;
   -- end if;
  
       
    
  
   --select sum(((nvl( least(waiver_recovery_date,to_date('31-dec-'||to_char(yr1),'dd-mon-rrrr')),cd))-(greatest(waiver_start_date,to_date('01-jan-'||to_char(yr1),'dd-mon-rrrr'))+2))/365) INTO WAIVED_SERVICE from table_pen_waiver where waiver_id=id1 and upper(waiver_type) in ('PEN-PEN','LTD') and waiver_start_date <to_date('31-dec-'||to_char(yr1),'dd-mon-rrrr') and (waiver_recovery_date is null or (waiver_recovery_date is not null and waiver_recovery_date>to_date('01-jan-'||to_char(yr1),'dd-mon-rrrr')));
  nd:=nd-nvl(waived_service,0);
  dbms_output.put_line(prev_cont_int||' '||int1||' '||curr_conts||' '||nd2);
   R:=(NVL(PREV_CONT_INT,0)*(NVL(INT1,0)/100)*ND)+(NVL(CURR_CONTS,0)*(NVL(INT1,0)/100)*ND2*.5);
   end if;
   ELSE
   R:=0;
   END IF;
   
   
   RETURN nvl(R,0);
END ;
 PROCEDURE CREATE_ANNUAL_BLANK_RECORDS1(CLT_ID VARCHAR2,PL_ID VARCHAR2,ACCT VARCHAR2,YR NUMBER) IS
CURSOR C IS
    --SELECT ANN_CLIENT,ANN_PLAN,ANN_ID,ANN_ACCOUNT,MAX(ANN_YEAR) YR1 FROM TBL_ANNUAL,TBL_PENMAST WHERE PENM_CLIENT=CLT_ID AND PENM_PLAN=PL_ID AND PENM_ID=ANN_ID AND NVL(PENM_STATUS,'A') IN ('C','A','VP') AND ANN_CLIENT=CLT_ID AND ANN_PLAN=PL_ID AND ANN_ACCOUNT=ACCT AND ANN_YEAR<=YR GROUP BY ANN_CLIENT,ANN_PLAN,ANN_ID,ANN_ACCOUNT;
  -- SELECT PENM_CLIENT,PENM_PLAN,PENM_ID,ANN_ACCOUNT,MAX(ANN_YEAR) YR1 FROM TBL_ANNUAL,TBL_PENMAST WHERE PENM_CLIENT='DT' AND PENM_PLAN='MACH1' AND PENM_ID=ANN_ID  AND ANN_CLIENT='DT' AND ANN_PLAN='MACH1' AND ANN_ACCOUNT='ST' AND ANN_YEAR<=2016 GROUP BY PENM_CLIENT,PENM_PLAN,PENM_ID,ANN_ACCOUNT HAVING MAX(ANN_YEAR)<(SELECT MAX(ANN_YEAR) FROM TBL_ANNUAL WHERE ANN_CLIENT=PENM_CLIENT AND ANN_PLAN=PENM_PLAN AND ANN_ID=PENM_ID GROUP BY ANN_CLIENT,ANN_PLAN,ANN_ID);
   SELECT PENM_CLIENT,PENM_PLAN,PENM_ID,ANN_ACCOUNT,MIN(ANN_YEAR) YR1 FROM TBL_ANNUAL,TBL_PENMAST WHERE PENM_CLIENT=CLT_ID AND PENM_PLAN=PL_ID AND PENM_ID=ANN_ID  AND ANN_CLIENT=CLT_ID AND ANN_PLAN=PL_ID AND ANN_ACCOUNT=ACCT AND NVL(ANN_ER_CONTS,0)+NVL(ER_INT,0)<>0 AND ANN_YEAR<YR GROUP BY PENM_CLIENT,PENM_PLAN,PENM_ID,ANN_ACCOUNT HAVING MAX(ANN_YEAR)<(SELECT MAX(ANN_YEAR) FROM TBL_ANNUAL WHERE ANN_CLIENT=PENM_CLIENT AND ANN_PLAN=PENM_PLAN AND ANN_ID=PENM_ID GROUP BY ANN_CLIENT,ANN_PLAN,ANN_ID);
REC C%ROWTYPE;
ST_YR NUMBER;
YR2 NUMBER;
CNT NUMBER;
BEGIN
OPEN C;
LOOP 
FETCH C INTO REC;
EXIT WHEN C%NOTFOUND;
ST_YR:=REC.YR1+1;
SELECT NVL(MAX(ANN_YEAR),YR) INTO YR2 FROM TBL_ANNUAL WHERE ANN_CLIENT=REC.PENM_CLIENT AND ANN_PLAN=REC.PENM_PLAN AND ANN_ID=REC.PENM_ID AND ANN_ACCOUNT=REC.ANN_ACCOUNT GROUP BY ANN_CLIENT,ANN_PLAN,ANN_ID;

LOOP
IF ST_YR>YR2 THEN
 EXIT;
END IF;
SELECT COUNT(*) INTO CNT FROM TBL_ANNUAL WHERE ANN_CLIENT=REC.PENM_CLIENT AND ANN_PLAN=REC.PENM_PLAN AND ANN_ID=REC.PENM_ID AND ANN_ACCOUNT=REC.ANN_ACCOUNT AND ANN_YEAR=ST_YR;
IF NVL(CNT,0)=0 THEN
INSERT INTO TBL_ANNUAL(ANN_CLIENT,ANN_PLAN,ANN_ID,ANN_ACCOUNT,ANN_YEAR) VALUES (REC.PENM_CLIENT,REC.PENM_PLAN,REC.PENM_ID,REC.ANN_ACCOUNT,ST_YR);
END IF;
ST_YR:=ST_YR+1;
END LOOP;
END LOOP;
CLOSE C;
END;
PROCEDURE CREATE_ANNUAL_BLANK_RECORDS2(CLT_ID VARCHAR2,PL_ID VARCHAR2,ACCT VARCHAR2,YR NUMBER) IS
CURSOR C IS
    --SELECT ANN_CLIENT,ANN_PLAN,ANN_ID,ANN_ACCOUNT,MAX(ANN_YEAR) YR1 FROM TBL_ANNUAL,TBL_PENMAST WHERE PENM_CLIENT=CLT_ID AND PENM_PLAN=PL_ID AND PENM_ID=ANN_ID AND NVL(PENM_STATUS,'A') IN ('C','A','VP') AND ANN_CLIENT=CLT_ID AND ANN_PLAN=PL_ID AND ANN_ACCOUNT=ACCT AND ANN_YEAR<=YR GROUP BY ANN_CLIENT,ANN_PLAN,ANN_ID,ANN_ACCOUNT;
  -- SELECT PENM_CLIENT,PENM_PLAN,PENM_ID,ANN_ACCOUNT,MAX(ANN_YEAR) YR1 FROM TBL_ANNUAL,TBL_PENMAST WHERE PENM_CLIENT='DT' AND PENM_PLAN='MACH1' AND PENM_ID=ANN_ID  AND ANN_CLIENT='DT' AND ANN_PLAN='MACH1' AND ANN_ACCOUNT='ST' AND ANN_YEAR<=2016 GROUP BY PENM_CLIENT,PENM_PLAN,PENM_ID,ANN_ACCOUNT HAVING MAX(ANN_YEAR)<(SELECT MAX(ANN_YEAR) FROM TBL_ANNUAL WHERE ANN_CLIENT=PENM_CLIENT AND ANN_PLAN=PENM_PLAN AND ANN_ID=PENM_ID GROUP BY ANN_CLIENT,ANN_PLAN,ANN_ID);
   SELECT PENM_CLIENT,PENM_PLAN,PENM_ID,ANN_ACCOUNT,MAX(ANN_YEAR) YR1 FROM TBL_ANNUAL,TBL_PENMAST WHERE PENM_CLIENT=CLT_ID AND PENM_PLAN=PL_ID AND PENM_ID=ANN_ID  AND ANN_CLIENT=CLT_ID AND ANN_PLAN=PL_ID AND ANN_ACCOUNT=ACCT AND ANN_YEAR<YR GROUP BY PENM_CLIENT,PENM_PLAN,PENM_ID,ANN_ACCOUNT HAVING MAX(ANN_YEAR)=(SELECT MAX(ANN_YEAR) FROM TBL_ANNUAL WHERE ANN_CLIENT=PENM_CLIENT AND ANN_PLAN=PENM_PLAN AND ANN_ID=PENM_ID AND ANN_ACCOUNT=ACCT GROUP BY ANN_CLIENT,ANN_PLAN,ANN_ID,ANN_ACCOUNT HAVING SUM(NVL(ANN_ER_CONTS,0)+NVL(ER_INT,0))>0);
REC C%ROWTYPE;
ST_YR NUMBER;
YR2 NUMBER;
CNT NUMBER;
BEGIN
OPEN C;
LOOP 
FETCH C INTO REC;
EXIT WHEN C%NOTFOUND;
ST_YR:=GREATEST(REC.YR1+1,2011);
--SELECT NVL(MAX(ANN_YEAR),YR) INTO YR2 FROM TBL_ANNUAL WHERE ANN_CLIENT=REC.PENM_CLIENT AND ANN_PLAN=REC.PENM_PLAN AND ANN_ID=REC.PENM_ID AND ANN_ACCOUNT=REC.ANN_ACCOUNT GROUP BY ANN_CLIENT,ANN_PLAN,ANN_ID;
YR2:=YR;
LOOP
IF ST_YR>YR2 THEN
 EXIT;
END IF;
SELECT COUNT(*) INTO CNT FROM TBL_ANNUAL WHERE ANN_CLIENT=REC.PENM_CLIENT AND ANN_PLAN=REC.PENM_PLAN AND ANN_ID=REC.PENM_ID AND ANN_ACCOUNT=REC.ANN_ACCOUNT AND ANN_YEAR=ST_YR;
IF NVL(CNT,0)=0 THEN
INSERT INTO TBL_ANNUAL(ANN_CLIENT,ANN_PLAN,ANN_ID,ANN_ACCOUNT,ANN_YEAR) VALUES (REC.PENM_CLIENT,REC.PENM_PLAN,REC.PENM_ID,REC.ANN_ACCOUNT,ST_YR);
END IF;
ST_YR:=ST_YR+1;
END LOOP;
END LOOP;
CLOSE C;
END;

FUNCTION GET_PEN_STATUS_DT(CLT_ID VARCHAR2,PL_ID VARCHAR2,MEM_ID VARCHAR2,DT DATE) RETURN VARCHAR2 AS
ST VARCHAR2(10);
BEGIN
SELECT MAX(TMPSH_STATUS) INTO ST FROM TBL_MEM_PEN_STATUS_HIST WHERE TMPSH_CLIENT=CLT_ID AND TMPSH_PLAN=PL_ID AND TMPSH_MEM_ID=MEM_ID AND tmpsh_status_date>=DT AND TMPSH_STATUS NOT IN ('C','A');
IF ST IS NULL THEN
    SELECT MAX(A.TMPSH_STATUS) INTO ST FROM TBL_MEM_PEN_STATUS_HIST A WHERE A.TMPSH_CLIENT=CLT_ID AND A.TMPSH_PLAN=PL_ID AND A.TMPSH_MEM_ID=MEM_ID AND A.tmpsh_status_date=(SELECT MAX(B.TMPSH_STATUS_DATE)  FROM TBL_MEM_PEN_STATUS_HIST B WHERE B.TMPSH_CLIENT=CLT_ID AND B.TMPSH_PLAN=PL_ID AND B.TMPSH_MEM_ID=MEM_ID AND B.TMPSH_STATUS_DATE<=DT);
     
    IF ST IS NULL THEN
       SELECT MAX(A.TMPSH_STATUS) INTO ST FROM TBL_MEM_PEN_STATUS_HIST A WHERE A.TMPSH_CLIENT=CLT_ID AND A.TMPSH_PLAN=PL_ID AND A.TMPSH_MEM_ID=MEM_ID AND A.tmpsh_status_date=(SELECT MIN(B.TMPSH_STATUS_DATE)  FROM TBL_MEM_PEN_STATUS_HIST B WHERE B.TMPSH_CLIENT=CLT_ID AND B.TMPSH_PLAN=PL_ID AND B.TMPSH_MEM_ID=MEM_ID AND B.TMPSH_STATUS_DATE>=DT);
    END IF;
END IF;
RETURN ST;
END;

END PENSION_PKG;
/

